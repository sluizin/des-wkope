apply plugin: 'application'
apply plugin: 'java-library'
compileJava.options.encoding='UTF-8' //这一句可以防止项目中文乱码	
import groovy.io.FileType
buildscript {
	  repositories {
			mavenLocal()
			mavenCentral() 
   			jcenter() {url "http://jcenter.bintray.com/"}
			maven {url "https://plugins.gradle.org/m2/"}
			maven {url "http://www.ebi.ac.uk/intact/maven/nexus/content/repositories/ebi-repo/"}
			maven {url "http://maven.nuiton.org/release/"}
		}
	  dependencies {
			tasks.withType(JavaCompile) {options.encoding = "UTF-8"}
	  }
}
allprojects {  
	apply plugin: 'java'
	apply plugin: 'maven'
	apply plugin: 'eclipse'
	sourceCompatibility = 1.8   // 设置 JDK 版本
	targetCompatibility = 1.8
	ext.vendor = 'Sunjian'	
}
version = '1.3'
def jarbitExt=""
def env = System.getProperty("env") ?: "dev" //设置多环境
def bit = System.getProperty("bit") ?: "64" //设置多环境
if(!"32".equals(bit)){
	jarbitExt = "_64"
}
apply from: "../General-Project/comm_dependencies.gradle"

dependencies {
	compile(project(':des-wkope-task'){
   run.doFirst {println 'run.doFirst for des-wkope-task'}
	}) 
	{
   	 exclude group: 'org.eclipse.swt', module: 'org.eclipse.swt.win32.win32.x86_64'
	}
	compile("org.eclipse.swt:org.eclipse.swt.win32.win32.x86${jarbitExt}:4.3")
	compile fileTree(dir: 'libs', include: ['*.jar'])
}

sourceSets {
    main {
        resources {
            srcDirs =["src/main","src/main/java","src/main/resources"]
            exclude "/"
            exclude "**/*"
        }
    }
}

def newjarfile ="des-wkope-${version}_${bit}.jar"
jar {
	//configurations.runtime.each { println it.path }
	println "===	configurations.compile.each	======"
    configurations.compile.each { println it.path }
	println "===	configurations.compile.each	 OK!!!! ======"

	println '>>>>>>>>>>>>>>>>jar'
    manifest {  
        attributes (
        		'Manifest-Version':version, 
        		'Implementation-Title': 'des-wkope',  
                'Implementation-Version': version,  
                'Created-By': vendor,  
                'Main-Class': 'des.wangku.operate.Desktop' 
        )  
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    into('assets') {
        from 'assets'
    }
	println '>>>>>>>>>>>>>>>>拷贝jar文件!!!'	
    doLast {
        copy {        
		    from( 'build/libs') 
			include("des-wkope-${version}.jar")   
		    into( 'build/libs')  
		    rename("des-wkope-${version}.jar",newjarfile) 
        }
        delete{
		    delete ("des-wkope-${version}.jar")
        }
    }
	println '>>>>>>>>>>>>>>>>jar         ok!!!'
}
def workspacespath="D:/Eclipse/eclipse-oxygen/Workspaces"
def dir = new File(workspacespath)
run.doFirst{
	println 'run.doFirst'
        copy {  
            from  'src/main/resources/'  
            into 'build/classes/main/' 
    		include '**/*.*' 
            }
	println '删除所有项目中生成的lib中的jar'
     //~/^des-wkope-task-[pP].*/
     dir.eachDirMatch(~/^des-wkope-task-.*/){d ->
            def path = d.path+"\\build\\libs\\"
            def jarlibsdir = new File(path)
            jarlibsdir.eachFileMatch(~/^des-wkope-task-[pP].*\.jar.*/){
            	f->
            	println f
    			delete f
            }
      }
     dir.eachDirMatch(~/^des-wkope-*/){d ->
            def path = d.path+"\\build\\libs\\"
            def jarlibsdir = new File(path)
            jarlibsdir.eachFileMatch(~/^des-wkope-.*\.jar.*/){
            	f->
            	println f
    			delete f
            }
            jarlibsdir.eachFileMatch(~/^sysInfo.log/){
            	f->
            	println f
    			delete f
            }
      }
	println '删除所有项目中生成的lib中的jar>>>完成'
    // println "第二种"
    // dir.traverse(type:FileType.DIRECTORIES,nameFilter:~/.*des-wkope-task-[pP].*/) {
       // println it
     //} 
       
}
run {
    systemProperty "env", System.getProperty("env")
    systemProperty "bit", System.getProperty("bit")
}

//task javaSourceGen (type:Exec){
//    commandLine "mv","src/main/java/com/caiqr/caipiao/wsdl/hecai/Iprotocol_bz.txt"
//}



task JarAll{
	if (!project.hasProperty('all')) {	// 参数通过-P输入
	println "===	break JarAll Task !!!! ======"
        return;
    }
    println 'this is all Project build JAR!!'
    println "workspacespath:"+workspacespath    
     dir.eachDirMatch(~/^des-wkope-task-.*/){d ->
			def path2=d.path.replaceAll('\\\\','/')           
			def projectname=path2.replaceAll(workspacespath+"/","")
            println "projectname:"+projectname
			exec {
				workingDir "../" + projectname
		        executable "gradle.bat"
		        args "jar"
				standardOutput = new ByteArrayOutputStream()
				ext.output = {
					return standardOutput.toString()
				}
		    }
      } 
}






mainClassName='des.wangku.operate.Desktop'
